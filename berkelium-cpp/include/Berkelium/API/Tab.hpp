// Copyright (c) 2012 The Berkelium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef BERKELIUM_API_TAB_HPP_
#define BERKELIUM_API_TAB_HPP_
#pragma once

// =========================================
// WARNING:
//   THIS FILE IS AUTOMATICALLY GENERATED!
//   !! ANY CHANGES WILL BE OVERWRITTEN !!
//
// See berkelium/berkelium-api/update.sh
// =========================================

#include <Berkelium/API/Berkelium.hpp>

namespace Berkelium {

class Tab {
protected:
	Tab();

public:
	virtual ~Tab() = 0;

	// Internal Update Function
	virtual void internalUpdate() = 0;

	// Closes this tab and removes it from the window.
	virtual void close() = 0;

	// Wait until all pending Java Script Events are handled.
	virtual void sync() = 0;

	// All methods called on this tab delegate are forwared to all tab delegates of this tab.
	virtual TabDelegateRef getTabDelegate() = 0;

	// Add a TabDelegate to this tab.
	virtual void addTabDelegate(TabDelegateRef delegate) = 0;

	// Remove a TabDelegate from this tab.
	virtual void removeTabDelegate(TabDelegateRef delegate) = 0;

	// Returns the Window of this Tab.
	virtual WindowRef getWindow() = 0;

	// Set the size of this tab.
	virtual void resize(int32_t width, int32_t height) = 0;

	// Set the URL of this tab. A new tab has the url “about:blank”.
	virtual void navigateTo(const std::string& url) = 0;
};

} // namespace Berkelium

#endif // BERKELIUM_TAB_HPP_
