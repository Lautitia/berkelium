CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT(berkelium-java)

IF(NOT DEFINED BERKELIUM_BUILD)
	MESSAGE(FATAL_ERROR "this project should be build using berkelium build system!")
ENDIF()

IF(NOT DEFINED ENV{JDK_HOME})
	MESSAGE(FATAL_ERROR "JDK_HOME not set!")
ENDIF()

SET(JAVAC "$ENV{JDK_HOME}/bin/javac" CACHE FILEPATH "javac")
SET(JAVAH "$ENV{JDK_HOME}/bin/javah" CACHE FILEPATH "javah")

SET(BERKELIUM_JAVA_SRC ${CMAKE_CURRENT_SOURCE_DIR}/src/main/java CACHE PATH "berkelium java src")
SET(BERKELIUM_JAVA_JNI ${CMAKE_CURRENT_SOURCE_DIR}/src/main/cpp CACHE PATH "berkelium java jni includes")
SET(BERKELIUM_JAVA_TMP ${CMAKE_CURRENT_BINARY_DIR}/java-tmp CACHE PATH "berkelium java tmp")
FILE(MAKE_DIRECTORY "${BERKELIUM_JAVA_TMP}")

SET(BERKELIUM_JAVA_JNI_HEADERS "")

FOREACH(SRC ${BERKELIUM_SRC_JNI})
	# JAVAC_TARGET
	STRING(REGEX REPLACE ".java" ".class" JAVAC_TARGET ${SRC})

	# JAVAH_TARGET
	STRING(REGEX REPLACE ".java" ".h" JAVAH_TARGET ${SRC})
	STRING(REGEX REPLACE "/" "_" JAVAH_TARGET ${JAVAH_TARGET})

	# JAVA_CLASS_NAME
	STRING(REGEX REPLACE ".java" "" JAVA_CLASS_NAME ${SRC})
	STRING(REGEX REPLACE "/" "." JAVA_CLASS_NAME ${JAVA_CLASS_NAME})

	# add to jni header files
	LIST(APPEND BERKELIUM_JAVA_JNI_HEADERS ${BERKELIUM_JAVA_JNI}/${JAVAH_TARGET})

	# TODO: dependency check
	ADD_CUSTOM_COMMAND(
		OUTPUT ${BERKELIUM_JAVA_TMP}/${JAVAC_TARGET}
		DEPENDS "${BERKELIUM_JAVA_SRC}/${SRC}"
		COMMAND "${JAVAC}" -d "${BERKELIUM_JAVA_TMP}" -classpath "${BERKELIUM_JAVA_SRC}" "${BERKELIUM_JAVA_SRC}/${SRC}"
		COMMENT "Building Java Class ${JAVA_CLASS_NAME}"
	)

	ADD_CUSTOM_COMMAND(
		OUTPUT ${BERKELIUM_JAVA_JNI}/${JAVAH_TARGET}
		DEPENDS ${BERKELIUM_JAVA_TMP}/${JAVAC_TARGET}
		COMMAND "${JAVAH}" -force -d "${BERKELIUM_JAVA_JNI}" -classpath "${BERKELIUM_JAVA_TMP}" "${JAVA_CLASS_NAME}"
		COMMENT "Generating JNI Header ${JAVAH_TARGET}"
	)
ENDFOREACH()

INCLUDE_DIRECTORIES(${BERKELIUM_JAVA_JNI} ${BERKELIUM_C_INCLUDE})

ADD_LIBRARY(berkelium-java${BERKELIUM_BITS} SHARED ${BERKELIUM_JAVA_JNI_HEADERS} src/main/cpp/berkelium-jni.cpp)
TARGET_LINK_LIBRARIES(berkelium-java${BERKELIUM_BITS} ${BERKELIUM_CPP_LIBS})

FILE(GLOB_RECURSE BERKELIUM_JAVA_DEPS RELATIVE "${CMAKE_CURRENT_SOURCE_DIR}" "src/*.java")

LIST(APPEND BERKELIUM_JAVA_DEPS "pom.xml" "dist/pom.xml" "dist/pom.properties")

GET_FILENAME_COMPONENT(BERKELIUM_JAVA_JAR_DIR ${CMAKE_CURRENT_BINARY_DIR}/../../run ABSOLUTE)
GET_FILENAME_COMPONENT(BERKELIUM_JAVA_API_JAR ${BERKELIUM_JAVA_JAR_DIR}/berkelium-api.jar ABSOLUTE)
GET_FILENAME_COMPONENT(BERKELIUM_JAVA_PLATFORM_JAR ${BERKELIUM_JAVA_JAR_DIR}/berkelium-${BERKELIUM_PLATFORM}.jar ABSOLUTE)

ADD_CUSTOM_COMMAND(
	OUTPUT "${BERKELIUM_JAVA_API_JAR}"
	COMMAND cmake -E remove "${BERKELIUM_JAVA_API_JAR}"
	COMMAND mvn "-Dbuild.dir=${CMAKE_CURRENT_BINARY_DIR}/mvn-api" package -Dbuild.api
	WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
	DEPENDS ${BERKELIUM_JAVA_DEPS}
	COMMENT "building berkelium-api.jar..."
)

ADD_CUSTOM_COMMAND(
	OUTPUT "${BERKELIUM_JAVA_PLATFORM_JAR}"
	COMMAND cmake -E remove "${BERKELIUM_JAVA_PLATFORM_JAR}"
	COMMAND mvn "-Dbuild.dir=${CMAKE_CURRENT_BINARY_DIR}/mvn-platform" package "-Dtarget.platform=${BERKELIUM_PLATFORM}" "-Ddist.dir=${BERKELIUM_DIST_DIR}" "-Ddist.name=${BERKELIUM_DIST_NAME}" "-Ddist.lib=${BERKELIUM_LIB_PREFIX}berkelium-java${BERKELIUM_BITS}${BERKELIUM_LIB_SUFFIX}"
	WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
	DEPENDS ${BERKELIUM_JAVA_DEPS} berkelium-java${BERKELIUM_BITS}
	COMMENT "building berkelium-${BERKELIUM_PLATFORM}.jar..."
)

ADD_CUSTOM_TARGET(berkelium-java ALL DEPENDS berkelium-dist "${BERKELIUM_JAVA_API_JAR}" "${BERKELIUM_JAVA_PLATFORM_JAR}")
