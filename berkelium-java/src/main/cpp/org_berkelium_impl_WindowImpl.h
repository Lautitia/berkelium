/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_berkelium_impl_WindowImpl */

#ifndef _Included_org_berkelium_impl_WindowImpl
#define _Included_org_berkelium_impl_WindowImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_berkelium_impl_WindowImpl
 * Method:    dispose
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_berkelium_impl_WindowImpl_dispose
  (JNIEnv *, jobject);

/*
 * Class:     org_berkelium_impl_WindowImpl
 * Method:    getRuntime
 * Signature: ()Lorg/berkelium/api/Runtime;
 */
JNIEXPORT jobject JNICALL Java_org_berkelium_impl_WindowImpl_getRuntime
  (JNIEnv *, jobject);

/*
 * Class:     org_berkelium_impl_WindowImpl
 * Method:    internalUpdate
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_berkelium_impl_WindowImpl_internalUpdate
  (JNIEnv *, jobject);

/*
 * Class:     org_berkelium_impl_WindowImpl
 * Method:    getTabCount
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_berkelium_impl_WindowImpl_getTabCount
  (JNIEnv *, jobject);

/*
 * Class:     org_berkelium_impl_WindowImpl
 * Method:    getTabList
 * Signature: ()Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_org_berkelium_impl_WindowImpl_getTabList
  (JNIEnv *, jobject);

/*
 * Class:     org_berkelium_impl_WindowImpl
 * Method:    createTab
 * Signature: ()Lorg/berkelium/api/Tab;
 */
JNIEXPORT jobject JNICALL Java_org_berkelium_impl_WindowImpl_createTab
  (JNIEnv *, jobject);

/*
 * Class:     org_berkelium_impl_WindowImpl
 * Method:    getInstance
 * Signature: ()Lorg/berkelium/api/Instance;
 */
JNIEXPORT jobject JNICALL Java_org_berkelium_impl_WindowImpl_getInstance
  (JNIEnv *, jobject);

/*
 * Class:     org_berkelium_impl_WindowImpl
 * Method:    moveTo
 * Signature: (Lorg/berkelium/api/Tab;I)V
 */
JNIEXPORT void JNICALL Java_org_berkelium_impl_WindowImpl_moveTo
  (JNIEnv *, jobject, jobject, jint);

/*
 * Class:     org_berkelium_impl_WindowImpl
 * Method:    isIncognito
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_org_berkelium_impl_WindowImpl_isIncognito
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
