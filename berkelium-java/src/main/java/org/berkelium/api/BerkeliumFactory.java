// Copyright (c) 2013 The Berkelium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

package org.berkelium.api;

// =========================================
// WARNING:
//   THIS FILE IS AUTOMATICALLY GENERATED!
//   !! ANY CHANGES WILL BE OVERWRITTEN !!
//
// See berkelium/berkelium-api/update.sh
// =========================================

public abstract class BerkeliumFactory {
	private static BerkeliumFactory instance;

	public synchronized static BerkeliumFactory getInstance() {
		if(instance == null) {
			try {
				System.loadLibrary("berkelium-java");
				Class<?> c = BerkeliumFactory.class.getClassLoader().loadClass(
					"org.berkelium.impl.BerkeliumFactoryImpl");
				java.lang.reflect.Constructor<?> ctor = c.getConstructor();
				ctor.setAccessible(true);
				instance = (BerkeliumFactory)ctor.newInstance();
			} catch (Exception ex) {
				throw new RuntimeException(ex);
			}
		}
		return instance;
	}
		
	// Returns the default Berkelium Runtime Instance.
	public abstract Runtime getDefaultRuntime();

	// Creates an add additional Berkelium Runtime Instance with default LogDelegate.
	public abstract Runtime createRuntime();

	// Creates an add additional Berkelium Runtime Instance with given LogDelegate.
	public abstract Runtime createRuntimeWithLog(LogDelegate log);
}
